<?xml version="1.0" encoding="UTF-8"?>

<b:beans xmlns="http://www.springframework.org/schema/security"
   xmlns:b="http://www.springframework.org/schema/beans" 
   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
   xsi:schemaLocation="http://www.springframework.org/schema/beans 
     http://www.springframework.org/schema/beans/spring-beans.xsd
     http://www.springframework.org/schema/security 
     http://www.springframework.org/schema/security/spring-security.xsd">

	  <http auto-config="true">
			<!-- Declaramos todos los recursos que estaran protegidos -->
			<intercept-url pattern="/peliculas/*" access="hasAnyAuthority('EDITOR','GERENTE')" />
			<intercept-url pattern="/horarios/*" access="hasAnyAuthority('EDITOR','GERENTE')" />
			<intercept-url pattern="/noticias/*" access="hasAnyAuthority('EDITOR','GERENTE')" />
			<intercept-url pattern="/banners/*" access="hasAnyAuthority('GERENTE')" />
	  
	  	<form-login login-page="/formLogin" default-target-url="/admin/index"/>
	  	
	   </http>

	<!--Autenticacion desde una base de datos -->
	<authentication-manager>
	<authentication-provider>
		<password-encoder ref="passwordEncoder" /><!-- Forma derecuperar 
			usuarios -->
		<jdbc-user-service data-source-ref="dataSource"
			users-by-username-query="select CUENTA,PWD,ACTIVO from USUARIOS where CUENTA=?"
			authorities-by-username-query="select CUENTA,PERFIL from PERFIL where CUENTA=?" /><!-- 
			El dataSource es el mismo de root.contex para la base de datos -->
	</authentication-provider>
	</authentication-manager>
	<b:bean id="passwordEncoder" class="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder" />
		
		<!-- Login de forma estatica  -->
   <!-- <authentication-manager>

      <authentication-provider>
		<user-service>
		  <user name="javier" password="{noop}javi123" authorities="EDITOR" />		  
		  <user name="marisol" password="{noop}mari123" authorities="GERENTE" />  
		</user-service>
      </authentication-provider>

   </authentication-manager> -->

</b:beans>
